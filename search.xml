<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/Blog/posts/1243066710/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>spring-dbunit使用指南</title>
    <url>/Blog/posts/f363124e/</url>
    <content><![CDATA[<h3 id="目标："><a href="#目标：" class="headerlink" title="目标："></a>目标：</h3><p>​    帮助你些一个可以多次重复运行且不依赖数据库现在数据的单元测试。<br>​    官方文档：<a href="https://springtestdbunit.github.io/spring-test-dbunit/index.html" target="_blank" rel="noopener">传送门</a></p>
<h3 id="QuickStart"><a href="#QuickStart" class="headerlink" title="QuickStart"></a>QuickStart</h3><h4 id="1、引入依赖"><a href="#1、引入依赖" class="headerlink" title="1、引入依赖"></a>1、引入依赖</h4><p>​    具体版本视自己项目情况定义：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.springtestdbunit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test-dbunit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.dbunit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dbunit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2、配置"><a href="#2、配置" class="headerlink" title="2、配置"></a>2、配置</h4><h5 id="代码配置：基于现有可运行的单元测试的基础上，增加-TestExecutionListeners配置，如代码所示："><a href="#代码配置：基于现有可运行的单元测试的基础上，增加-TestExecutionListeners配置，如代码所示：" class="headerlink" title="代码配置：基于现有可运行的单元测试的基础上，增加@TestExecutionListeners配置，如代码所示："></a>代码配置：基于现有可运行的单元测试的基础上，增加@TestExecutionListeners配置，如代码所示：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(<span class="title">locations</span> </span>= <span class="string">"classpath:applicationContext.xml"</span>)</span><br><span class="line"><span class="meta">@DbUnitConfiguration</span>(databaseConnection=&#123;<span class="string">"customDataSource"</span>)</span><br><span class="line"><span class="meta">@TestExecutionListeners</span>(&#123;DependencyInjectionTestExecutionListener<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line"><span class="class">        <span class="title">DbUnitTestExecutionListener</span>.<span class="title">class</span>&#125;)</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>DependencyInjectionTestExecutionListener</strong>：负责注入单元测试中使用到的依赖。</li>
<li><strong>DbUnitTestExecutionListener</strong>：负责处理dbunit相关注解（见3、主要功能说明）。</li>
<li><strong>DbUnitConfiguration</strong>:  检查自己的dataSource的beanName，如果属于{“dbUnitDatabaseConnection”, “dataSource”}其中之一，可省略这个配置，否则需要加上，配置自己的beanName。</li>
</ul>
<p><strong>注：{“dbUnitDatabaseConnection”, “dataSource”}为dbunit默认去springContext中加载dataSource时使用的beanName。</strong></p>
<h4 id="3、主要功能说明"><a href="#3、主要功能说明" class="headerlink" title="3、主要功能说明"></a>3、主要功能说明</h4><ul>
<li><strong>@DatabaseSetup</strong> - 在testMethod执行之前会执行@DatabaseSetup，用于初始化测试数据<ul>
<li>connection - 连接的数据源，单数据源可不配置</li>
<li>type - 操作类型，参考DatabaseOperation枚举</li>
<li>value - 数据xml</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DatabaseSetup的DatabaseOperation默认值是CLEAN_INSERT，即清空表再插入数据，</span></span><br><span class="line"><span class="comment">//  明显与我们需求不符，配置成DatabaseOperation.INSERT即可。</span></span><br><span class="line"><span class="meta">@DatabaseSetup</span>(value =  <span class="string">"classpath:biz_info.xml"</span>,type = DatabaseOperation.INSERT)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>@DatabaseTearDown</strong> -  在testMethod执行之后会执行@DatabaseTearDown，用于回滚删除测试数据<br>配置项与@DatabaseSetup一致</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DatabaseTearDown的DatabaseOperation默认值为CLEAN_INSERT，即删除插入的数据。</span></span><br><span class="line"><span class="meta">@DatabaseTearDown</span>(<span class="string">"classpath:biz_info.xml"</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>@ExpectedDatabase</strong> -  在testMethod执行之后会执行@ExpectedDatabase，早于@DatabaseTearDown用于测试结果校验（<em>比较的是数据库中当前的记录和xml中配置的数据值是否完全一致，有点鸡肋</em>）<ul>
<li>connection - 连接的数据源，单数据源可不配置</li>
<li>value - 数据xml</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 比较的是数据库的值和xml中配置的数据值，有点鸡肋</span></span><br><span class="line"><span class="meta">@ExpectedDatabase</span>(<span class="string">"classpath:result.xml"</span>)</span><br></pre></td></tr></table></figure>

<h4 id="4、其他"><a href="#4、其他" class="headerlink" title="4、其他"></a>4、其他</h4><ul>
<li><p>如何配置回滚</p>
<ol>
<li>修改<strong><em>DbUnitTestExecutionListener</em></strong>为<strong><em>TransactionDbUnitTestExecutionListener。</em></strong></li>
<li>加上<strong><em>@Transactional</em></strong>注解。</li>
<li>在method上配置<strong>@DatabaseTearDown，</strong>标明要回滚删除哪些数据。</li>
</ol>
</li>
<li><p>多数据源如何配置</p>
<ol>
<li>测试类上配置@DbUnitConfiguration(databaseConnection={“customDataSource”,”dataSource”})</li>
<li>在method上使用@DatabaseTearDown|@DatabaseSetUp|@ExpectedDatabase时加上connection配置,指定dataSource</li>
</ol>
</li>
</ul>
<p><strong>例：@DatabaseTearDown(connection = “dataSource”,value=”classpath:biz_info.xml”)**</strong></p>
<hr>
<h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(<span class="title">locations</span> </span>= <span class="string">"classpath:daoApplicationContext.xml"</span>)</span><br><span class="line"><span class="meta">@DbUnitConfiguration</span>(databaseConnection = &#123;<span class="string">"dateSource"</span>&#125;)</span><br><span class="line"><span class="meta">@TestExecutionListeners</span>(&#123;DependencyInjectionTestExecutionListener<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line"><span class="class">        <span class="title">TransactionDbUnitTestExecutionListener</span>.<span class="title">class</span>&#125;)</span></span><br><span class="line"><span class="class">@<span class="title">Transactional</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">DistributeConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BizInfoDAO bizInfoDAO;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DatabaseSetup</span>(value =  <span class="string">"classpath:biz_info.xml"</span>,type = DatabaseOperation.INSERT)</span><br><span class="line">    <span class="meta">@DatabaseTearDown</span>(connection = <span class="string">"dateSource"</span>,value = <span class="string">"classpath:biz_info.xml"</span>)</span><br><span class="line">    <span class="meta">@ExpectedDatabase</span>(connection = <span class="string">"dateSource"</span>,value = <span class="string">"classpath:result.xml"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test_findAllBizInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;BizInfoPO&gt; bizInfoList = bizInfoDAO.findAll();</span><br><span class="line"></span><br><span class="line">        assertNotNull(bizInfoList);</span><br><span class="line">        assertEquals(<span class="number">2</span>,bizInfoList.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>biz_info.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!-- biz_info为表名，后面是字段 --&gt;</span><br><span class="line">&lt;dataset&gt;</span><br><span class="line">    &lt;biz_info  delete_mark&#x3D;&quot;0&quot; biz_code&#x3D;&quot;a&quot; biz_name&#x3D;&quot;a&quot;&#x2F;&gt;</span><br><span class="line">    &lt;biz_info  delete_mark&#x3D;&quot;0&quot; biz_code&#x3D;&quot;b&quot; biz_name&#x3D;&quot;b&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;dataset&gt;</span><br></pre></td></tr></table></figure>

<p>result.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">biz_info</span>  <span class="attr">delete_mark</span>=<span class="string">"0"</span> <span class="attr">biz_code</span>=<span class="string">"a"</span> <span class="attr">biz_name</span>=<span class="string">"a"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">biz_info</span>  <span class="attr">delete_mark</span>=<span class="string">"0"</span> <span class="attr">biz_code</span>=<span class="string">"b"</span> <span class="attr">biz_name</span>=<span class="string">"b"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataset</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>unit-test</category>
      </categories>
      <tags>
        <tag>dbUnit</tag>
      </tags>
  </entry>
  <entry>
    <title>test_my_site</title>
    <url>/Blog/posts/1965421688/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
